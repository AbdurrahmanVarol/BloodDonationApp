[{"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\index.js":"1","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\App.js":"2","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Login.js":"3","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Hospitals.js":"4","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Home.js":"5","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Register.js":"6","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\CreateRequest.js":"7","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\CreateHospital.js":"8","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Requests.js":"9","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\contexts\\DefaultContext.js":"10","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\layouts\\AuthLayout.js":"11","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\layouts\\DefaultLayout.js":"12","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\LoginForm\\index.js":"13","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\CreateRequestForm\\index.js":"14","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\CreateHospitalForm\\index.js":"15","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Register\\index.js":"16","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Navi\\index.js":"17","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Footer\\index.js":"18","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Register\\validations.js":"19","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\LoginForm\\validations.js":"20","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Cities\\index.js":"21","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\HospitalsAsSelect\\index.js":"22","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Genders\\index.js":"23","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\BloodGroups\\index.js":"24","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\UpdateHospital.js":"25","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\UpdateHospitalForm\\index.js":"26","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\UpdateRequest.js":"27","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\UpdateRequestForm\\index.js":"28"},{"size":300,"mtime":1690618724493,"results":"29","hashOfConfig":"30"},{"size":1856,"mtime":1690731613435,"results":"31","hashOfConfig":"30"},{"size":297,"mtime":1690696541387,"results":"32","hashOfConfig":"30"},{"size":2480,"mtime":1690734249199,"results":"33","hashOfConfig":"30"},{"size":1494,"mtime":1690720302587,"results":"34","hashOfConfig":"30"},{"size":292,"mtime":1690644425734,"results":"35","hashOfConfig":"30"},{"size":226,"mtime":1690718700117,"results":"36","hashOfConfig":"30"},{"size":231,"mtime":1690713247511,"results":"37","hashOfConfig":"30"},{"size":2530,"mtime":1690734179544,"results":"38","hashOfConfig":"30"},{"size":1811,"mtime":1690720205391,"results":"39","hashOfConfig":"30"},{"size":267,"mtime":1690642733369,"results":"40","hashOfConfig":"30"},{"size":1053,"mtime":1690697713394,"results":"41","hashOfConfig":"30"},{"size":3364,"mtime":1690696940479,"results":"42","hashOfConfig":"30"},{"size":3410,"mtime":1690728019862,"results":"43","hashOfConfig":"30"},{"size":3737,"mtime":1690717931376,"results":"44","hashOfConfig":"30"},{"size":6356,"mtime":1690713460788,"results":"45","hashOfConfig":"30"},{"size":2651,"mtime":1690728782362,"results":"46","hashOfConfig":"30"},{"size":363,"mtime":1690695001462,"results":"47","hashOfConfig":"30"},{"size":1142,"mtime":1690647619975,"results":"48","hashOfConfig":"30"},{"size":495,"mtime":1690640496278,"results":"49","hashOfConfig":"30"},{"size":861,"mtime":1690643155492,"results":"50","hashOfConfig":"30"},{"size":1166,"mtime":1690719430688,"results":"51","hashOfConfig":"30"},{"size":871,"mtime":1690643732616,"results":"52","hashOfConfig":"30"},{"size":935,"mtime":1690642895561,"results":"53","hashOfConfig":"30"},{"size":357,"mtime":1690734274488,"results":"54","hashOfConfig":"30"},{"size":4252,"mtime":1690731475355,"results":"55","hashOfConfig":"30"},{"size":334,"mtime":1690731650363,"results":"56","hashOfConfig":"30"},{"size":4113,"mtime":1690732112145,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"yhy5c6",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"61"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"61"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"61"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"61"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"61"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\index.js",[],[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\App.js",["153"],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Login.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Hospitals.js",["154","155"],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Home.js",["156"],[],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Table } from 'reactstrap'\r\nimport DefaultContext from '../contexts/DefaultContext'\r\nimport axios from 'axios'\r\n\r\nconst Home = () => {\r\n  const { token,userName, bloodGroup } = useContext(DefaultContext)\r\n  const [requests, setRequests] = useState([])\r\n\r\n  useEffect(() => {\r\n \r\n    axios({\r\n      method:\"Get\",\r\n      baseURL:'https://localhost:7195/api',\r\n      url:`requests/bloodgroup/${bloodGroup}`,\r\n      headers:{\r\n          \"Authorization\":`Bearer ${token}`\r\n      }\r\n  })\r\n    \r\n      .then(response => {\r\n        setRequests(response.data)\r\n      })\r\n      .catch(errors => console.log(errors))\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <div className=\"text-center mb-3\">\r\n        <h1 className=\"display-4\">Hoşgeldin {userName}</h1>\r\n      </div>\r\n\r\n      <Table borderless dark striped>\r\n        <thead>\r\n          <tr>\r\n            <td>Tür</td>\r\n            <td>Miktar</td>\r\n            <td>Hastane Adı</td>\r\n            <td>Şehir</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            requests.length > 0 && requests.map((request,index) => (\r\n              <tr key={index}>\r\n                <td>{request.bloodGroup}</td>\r\n                <td>{request.quantity}</td>\r\n                <td>{request.hospital}</td>\r\n                <td>{request.city}</td>\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Register.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\CreateRequest.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\CreateHospital.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\Requests.js",["157"],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\contexts\\DefaultContext.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\layouts\\AuthLayout.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\layouts\\DefaultLayout.js",["158"],[],"import React, { useContext, useEffect } from 'react'\r\nimport { Outlet, useNavigate } from 'react-router-dom'\r\nimport DefaultContext from '../contexts/DefaultContext'\r\nimport Navi from '../components/Navi'\r\nimport Footer from '../components/Footer'\r\n\r\nconst DefaultLayout = () => {\r\n  const { token, expire,clearData } = useContext(DefaultContext)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (!token || token === \"\") {\r\n      clearData();\r\n      navigate(\"/login\");\r\n      return\r\n    }\r\n    let now = new Date().getTime();\r\n    let expireDate = new Date(expire).getTime();\r\n\r\n    if (now > expireDate) {\r\n      //TODO:Refresh token eklenecek\r\n      clearData();\r\n      navigate(\"/login\");\r\n      return\r\n    }\r\n  }, [token,expire]);\r\n  return (\r\n    <div className=\"default\">\r\n      <Navi></Navi>\r\n      <div className=\"defaultContent\">\r\n        <div className=\"defaultComponent pb-3 shadow bg-light\">\r\n          <Outlet></Outlet>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default DefaultLayout","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\LoginForm\\index.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\CreateRequestForm\\index.js",["159","160","161"],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\CreateHospitalForm\\index.js",["162","163"],[],"import { useFormik } from 'formik'\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { Button, Form, FormGroup, Input } from 'reactstrap'\r\nimport Cities from '../Cities'\r\nimport alertify from 'alertifyjs'\r\nimport axios from 'axios'\r\nimport DefaultContext from '../../contexts/DefaultContext'\r\n\r\nconst CreateHospitalForm = () => {\r\n    const {token} = useContext(DefaultContext)\r\n    useEffect(()=>{\r\n        console.log(token)\r\n    },[])\r\n    const { handleSubmit, handleChange, handleBlur, values, errors, touched, isSubmitting } = useFormik({\r\n        initialValues: {\r\n            name: \"\",\r\n            phoneNumber: \"\",\r\n            cityId: \"\",\r\n            address: \"\"\r\n        },\r\n        onSubmit: (values, bag) => {       \r\n            console.log(values)     \r\n            axios({\r\n                baseURL: 'https://localhost:7195/api',\r\n                url: '/hospitals',\r\n                method: 'Post',\r\n                headers:{\r\n                    \"Authorization\":`Bearer ${token}`\r\n                },\r\n                data: values\r\n            })\r\n                .then(response => {\r\n                    alertify.success('Hastane eklendi.')\r\n                    bag.resetForm()\r\n                })\r\n                .catch(errors => {\r\n                    alertify.error('Hastane eklerken bir hata oluştu.')\r\n                })\r\n        },\r\n        //validationSchema\r\n    })\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                    <label className=\"text-dark-emphasis\" htmlFor=\"name\">Hastane Adı:</label>\r\n                    <Input\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Hastane adını giriniz...\"\r\n                        value={values.name}\r\n                        onBlur={handleBlur(\"name\")}\r\n                        onChange={handleChange}\r\n                    ></Input>\r\n                    {errors.name && touched.name && <div className=\"text-danger\">{errors.name}</div>}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <label className=\"text-dark-emphasis\" htmlFor=\"phoneNumber\">Telefon Numarası:</label>\r\n                    <Input\r\n                        id=\"phoneNumber\"\r\n                        name=\"phoneNumber\"\r\n                        placeholder=\"Telefon numarasını giriniz...\"\r\n                        value={values.phoneNumber}\r\n                        onBlur={handleBlur(\"phoneNumber\")}\r\n                        onChange={handleChange}\r\n                    ></Input>\r\n                    {errors.phoneNumber && touched.phoneNumber && <div className=\"text-danger\">{errors.phoneNumber}</div>}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Cities handleChange={handleChange} value={values.cityId}></Cities>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <label className=\"text-dark-emphasis\" htmlFor=\"address\">Adres:</label>\r\n                    <Input\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        type='textarea'\r\n                        placeholder=\"Adres giriniz...\"\r\n                        value={values.address}\r\n                        onBlur={handleBlur(\"address\")}\r\n                        onChange={handleChange}\r\n                    ></Input>\r\n                    {errors.address && touched.address && <div className=\"text-danger\">{errors.address}</div>}\r\n                </FormGroup>\r\n                <Button type=\"submit\" color=\"success\" >\r\n                    Kaydet\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateHospitalForm","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Register\\index.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Navi\\index.js",[],[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Footer\\index.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Register\\validations.js",["164","165","166","167"],[],"import { object, string, number, date, InferType,ref } from 'yup';\r\n\r\nconst requiredMessage = \"Bu alan zorunludur!\"\r\nconst minLengthMessage = \"En az 3 karakter girmelisiniz!\"\r\nconst maxLengthMessage = \"En fazla 50 karakter girebilirsiniz!\"\r\n\r\nconst registerSchema = object({\r\n  firstName:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  lastName:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  email:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  userName:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  password:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  passwordConfirm:string().min(3,minLengthMessage).max(50,maxLengthMessage).oneOf([ref(\"password\"),null],'Şifre ve şifre tekrar aynı olmalı!') .required(requiredMessage),\r\n  });\r\nexport default registerSchema\r\n\r\n// firstName: \"\",\r\n// lastName: \"\",\r\n// email: \"\",\r\n// cityId: \"\",\r\n// genderId: \"\",\r\n// bloodGroupId: \"\",\r\n// userName: \"\",\r\n// password: \"\",\r\n// passwordConfirm: \"\",","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\LoginForm\\validations.js",["168","169","170"],[],"import { object, string, number, date, InferType } from 'yup';\r\n\r\nconst requiredMessage = \"Bu alan zorunludur!\"\r\nconst minLengthMessage = \"En az 5 karakter girmelisiniz!\"\r\nconst maxLengthMessage = \"En fazla 10 karakter girebilirsiniz!\"\r\n\r\nconst loginSchema = object({\r\n  userName:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  password:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage)\r\n  });\r\nexport default loginSchema","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Cities\\index.js",["171"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst Cities = ({handleChange,value}) => {\r\n  const [cities,setCities] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios( 'https://localhost:7195/api/Cities')\r\n        .then(response=>setCities(response.data))\r\n        console.log(cities)\r\n    },[])\r\n  return (\r\n    <div className='form-floating'>\r\n        <select id='cityId' name='cityId' className='form-select' onChange={handleChange} value={value}>\r\n            <option value={0} hidden>Seçiniz</option>\r\n            {\r\n                cities.length>0 && cities.map(city=>(\r\n                    <option key={city.id} value={city.id}>{`${city.name}(${city.plate})`}</option>\r\n                ))\r\n            }\r\n        </select>\r\n        <label htmlFor=\"cityId\">Şehir</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cities","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\HospitalsAsSelect\\index.js",["172"],[],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport DefaultContext from '../../contexts/DefaultContext'\r\n\r\nconst HospitalsAsSelect = ({handleChange,value}) => {\r\n    const {token} = useContext(DefaultContext)\r\n  const [hospitals,setHospitals] = useState([])\r\n\r\n  useEffect(()=>{      \r\n      axios({\r\n        method:\"Get\",\r\n        baseURL:'https://localhost:7195/api',\r\n        url:\"/hospitals\",\r\n        headers:{\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n      .then(response=>setHospitals(response.data))\r\n      console.log(hospitals)\r\n  },[])\r\nreturn (\r\n  <div className='form-floating'>\r\n      <select id='hospitalId' name='hospitalId' className='form-select' onChange={handleChange} value={value}>\r\n          <option value={0} hidden>Seçiniz</option>\r\n          {\r\n              hospitals.length>0 && hospitals.map(hospital=>(\r\n                  <option key={hospital.id} value={hospital.id}>{`${hospital.name} - ${hospital.city}`}</option>\r\n              ))\r\n          }\r\n      </select>\r\n      <label htmlFor=\"cityId\">Hastane</label>\r\n  </div>\r\n)\r\n}\r\n\r\nexport default HospitalsAsSelect","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\Genders\\index.js",["173"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst Genders = ({handleChange,value}) => {\r\n    const [genders,setGenders] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios( 'https://localhost:7195/api/genders')\r\n        .then(response=>setGenders(response.data))\r\n        console.log(genders)\r\n    },[])\r\n  return (\r\n    <div className='form-floating'>\r\n        <select id='genderId' name='genderId' className='form-select' onChange={handleChange} value={value}>\r\n            <option value={0} hidden>Seçiniz</option>\r\n            {\r\n                genders.length>0 && genders.map(gender=>(\r\n                    <option key={gender.id} value={gender.id}>{`${gender.name}`}</option>\r\n                ))\r\n            }\r\n        </select>\r\n        <label htmlFor=\"cityId\">Cinsiyet</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Genders","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\BloodGroups\\index.js",["174"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst BloodGroups = ({handleChange,value}) => {\r\n    const [bloodGroups,setBloodGroups] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios( 'https://localhost:7195/api/BloodGroups')\r\n        .then(response=>setBloodGroups(response.data))\r\n        console.log(bloodGroups)\r\n    },[])\r\n  return (\r\n    <div className='form-floating'>\r\n        <select id='bloodGroupId' name='bloodGroupId' className='form-select' onChange={handleChange} value={value}>\r\n            <option value={0} hidden>Seçiniz</option>\r\n            {\r\n                bloodGroups.length>0 && bloodGroups.map(bloodGroup=>(\r\n                    <option key={bloodGroup.id} value={bloodGroup.id}>{bloodGroup.symbol}</option>\r\n                ))\r\n            }\r\n        </select>\r\n        <label htmlFor=\"BloodGroupId\">Kan Grubu</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BloodGroups","C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\UpdateHospital.js",["175"],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\UpdateHospitalForm\\index.js",["176","177"],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\pages\\UpdateRequest.js",[],[],"C:\\Users\\User\\source\\repos\\BloodDonationApp\\Client\\blood-donation-app-ui\\src\\components\\UpdateRequestForm\\index.js",["178","179","180","181"],[],{"ruleId":"182","severity":1,"message":"183","line":7,"column":10,"nodeType":"184","messageId":"185","endLine":7,"endColumn":19},{"ruleId":"182","severity":1,"message":"186","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":23,"column":8,"nodeType":"189","endLine":23,"endColumn":10,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"191","line":25,"column":6,"nodeType":"189","endLine":25,"endColumn":8,"suggestions":"192"},{"ruleId":"187","severity":1,"message":"193","line":22,"column":8,"nodeType":"189","endLine":22,"endColumn":10,"suggestions":"194"},{"ruleId":"187","severity":1,"message":"195","line":26,"column":6,"nodeType":"189","endLine":26,"endColumn":20,"suggestions":"196"},{"ruleId":"182","severity":1,"message":"197","line":12,"column":93,"nodeType":"184","messageId":"185","endLine":12,"endColumn":105},{"ruleId":"198","severity":1,"message":"199","line":48,"column":35,"nodeType":"200","messageId":"201","endLine":48,"endColumn":37},{"ruleId":"198","severity":1,"message":"199","line":60,"column":42,"nodeType":"200","messageId":"201","endLine":60,"endColumn":44},{"ruleId":"187","severity":1,"message":"193","line":13,"column":7,"nodeType":"189","endLine":13,"endColumn":9,"suggestions":"202"},{"ruleId":"182","severity":1,"message":"197","line":14,"column":78,"nodeType":"184","messageId":"185","endLine":14,"endColumn":90},{"ruleId":"182","severity":1,"message":"203","line":1,"column":26,"nodeType":"184","messageId":"185","endLine":1,"endColumn":32},{"ruleId":"182","severity":1,"message":"204","line":1,"column":34,"nodeType":"184","messageId":"185","endLine":1,"endColumn":38},{"ruleId":"182","severity":1,"message":"205","line":1,"column":40,"nodeType":"184","messageId":"185","endLine":1,"endColumn":49},{"ruleId":"206","severity":1,"message":"207","line":13,"column":19,"nodeType":"208","messageId":"209","endLine":13,"endColumn":153,"fix":"210"},{"ruleId":"182","severity":1,"message":"203","line":1,"column":26,"nodeType":"184","messageId":"185","endLine":1,"endColumn":32},{"ruleId":"182","severity":1,"message":"204","line":1,"column":34,"nodeType":"184","messageId":"185","endLine":1,"endColumn":38},{"ruleId":"182","severity":1,"message":"205","line":1,"column":40,"nodeType":"184","messageId":"185","endLine":1,"endColumn":49},{"ruleId":"187","severity":1,"message":"211","line":11,"column":7,"nodeType":"189","endLine":11,"endColumn":9,"suggestions":"212"},{"ruleId":"187","severity":1,"message":"188","line":20,"column":5,"nodeType":"189","endLine":20,"endColumn":7,"suggestions":"213"},{"ruleId":"187","severity":1,"message":"214","line":11,"column":7,"nodeType":"189","endLine":11,"endColumn":9,"suggestions":"215"},{"ruleId":"187","severity":1,"message":"216","line":11,"column":7,"nodeType":"189","endLine":11,"endColumn":9,"suggestions":"217"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"218","line":35,"column":8,"nodeType":"189","endLine":35,"endColumn":10,"suggestions":"219"},{"ruleId":"182","severity":1,"message":"197","line":37,"column":78,"nodeType":"184","messageId":"185","endLine":37,"endColumn":90},{"ruleId":"187","severity":1,"message":"218","line":40,"column":8,"nodeType":"189","endLine":40,"endColumn":10,"suggestions":"220"},{"ruleId":"182","severity":1,"message":"197","line":41,"column":93,"nodeType":"184","messageId":"185","endLine":41,"endColumn":105},{"ruleId":"198","severity":1,"message":"199","line":73,"column":35,"nodeType":"200","messageId":"201","endLine":73,"endColumn":37},{"ruleId":"198","severity":1,"message":"199","line":85,"column":42,"nodeType":"200","messageId":"201","endLine":85,"endColumn":44},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hospitals' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["221"],"React Hook useEffect has missing dependencies: 'bloodGroup' and 'token'. Either include them or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["223"],"React Hook useEffect has missing dependencies: 'clearData' and 'navigate'. Either include them or remove the dependency array.",["224"],"'isSubmitting' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["225"],"'number' is defined but never used.","'date' is defined but never used.","'InferType' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property required.","MemberExpression","unexpectedWhitespace",{"range":"226","text":"227"},"React Hook useEffect has a missing dependency: 'cities'. Either include it or remove the dependency array.",["228"],["229"],"React Hook useEffect has a missing dependency: 'genders'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has a missing dependency: 'bloodGroups'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["232"],["233"],{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"238","fix":"242"},[901,903],".",{"desc":"243","fix":"244"},{"desc":"234","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"250","fix":"252"},"Update the dependencies array to be: [hospitals, token]",{"range":"253","text":"254"},"Update the dependencies array to be: [bloodGroup, token]",{"range":"255","text":"256"},"Update the dependencies array to be: [token]",{"range":"257","text":"258"},"Update the dependencies array to be: [token, expire, clearData, navigate]",{"range":"259","text":"260"},{"range":"261","text":"258"},"Update the dependencies array to be: [cities]",{"range":"262","text":"263"},{"range":"264","text":"254"},"Update the dependencies array to be: [genders]",{"range":"265","text":"266"},"Update the dependencies array to be: [bloodGroups]",{"range":"267","text":"268"},"Update the dependencies array to be: [id, token]",{"range":"269","text":"270"},{"range":"271","text":"270"},[743,745],"[hospitals, token]",[684,686],"[bloodGroup, token]",[684,686],"[token]",[737,751],"[token, expire, clearData, navigate]",[446,448],[330,332],"[cities]",[615,617],[338,340],"[genders]",[362,364],"[bloodGroups]",[1045,1047],"[id, token]",[1293,1295]]