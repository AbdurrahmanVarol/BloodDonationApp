{"ast":null,"code":"import { object, string, number, date, InferType } from 'yup';\nconst requiredMessage = \"Bu alan zorunludur!\";\nconst minLengthMessage = \"En az 3 karakter girmelisiniz!\";\nconst maxLengthMessage = \"En fazla 50 karakter girebilirsiniz!\";\nconst registerSchema = object({\n  firstName: string().min(3, minLengthMessage).max(50, maxLengthMessage).required(requiredMessage),\n  lastName: string().min(3, minLengthMessage).max(50, maxLengthMessage).required(requiredMessage),\n  email: string().min(3, minLengthMessage).max(50, maxLengthMessage).required(requiredMessage),\n  userName: string().min(3, minLengthMessage).max(50, maxLengthMessage).required(requiredMessage),\n  password: string().min(3, minLengthMessage).max(50, maxLengthMessage).required(requiredMessage),\n  passwordConfirm: string().min(3, minLengthMessage).max(50, maxLengthMessage).oneOf(Yup.ref(\"password\")).required(requiredMessage)\n});\nexport default registerSchema;\n\n// firstName: \"\",\n// lastName: \"\",\n// email: \"\",\n// cityId: \"\",\n// genderId: \"\",\n// bloodGroupId: \"\",\n// userName: \"\",\n// password: \"\",\n// passwordConfirm: \"\",","map":{"version":3,"names":["object","string","number","date","InferType","requiredMessage","minLengthMessage","maxLengthMessage","registerSchema","firstName","min","max","required","lastName","email","userName","password","passwordConfirm","oneOf","Yup","ref"],"sources":["C:/Users/User/source/repos/Yeni klas√∂r/BloodDonationApp/Client/blood-donation-app-ui/src/components/Register/validations.js"],"sourcesContent":["import { object, string, number, date, InferType } from 'yup';\r\n\r\nconst requiredMessage = \"Bu alan zorunludur!\"\r\nconst minLengthMessage = \"En az 3 karakter girmelisiniz!\"\r\nconst maxLengthMessage = \"En fazla 50 karakter girebilirsiniz!\"\r\n\r\nconst registerSchema = object({\r\n  firstName:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  lastName:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  email:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  userName:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  password:string().min(3,minLengthMessage).max(50,maxLengthMessage).required(requiredMessage),\r\n  passwordConfirm:string().min(3,minLengthMessage).max(50,maxLengthMessage).oneOf(Yup.ref(\"password\")) .required(requiredMessage),\r\n  });\r\nexport default registerSchema\r\n\r\n// firstName: \"\",\r\n// lastName: \"\",\r\n// email: \"\",\r\n// cityId: \"\",\r\n// genderId: \"\",\r\n// bloodGroupId: \"\",\r\n// userName: \"\",\r\n// password: \"\",\r\n// passwordConfirm: \"\","],"mappings":"AAAA,SAASA,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,SAAS,QAAQ,KAAK;AAE7D,MAAMC,eAAe,GAAG,qBAAqB;AAC7C,MAAMC,gBAAgB,GAAG,gCAAgC;AACzD,MAAMC,gBAAgB,GAAG,sCAAsC;AAE/D,MAAMC,cAAc,GAAGR,MAAM,CAAC;EAC5BS,SAAS,EAACR,MAAM,CAAC,CAAC,CAACS,GAAG,CAAC,CAAC,EAACJ,gBAAgB,CAAC,CAACK,GAAG,CAAC,EAAE,EAACJ,gBAAgB,CAAC,CAACK,QAAQ,CAACP,eAAe,CAAC;EAC7FQ,QAAQ,EAACZ,MAAM,CAAC,CAAC,CAACS,GAAG,CAAC,CAAC,EAACJ,gBAAgB,CAAC,CAACK,GAAG,CAAC,EAAE,EAACJ,gBAAgB,CAAC,CAACK,QAAQ,CAACP,eAAe,CAAC;EAC5FS,KAAK,EAACb,MAAM,CAAC,CAAC,CAACS,GAAG,CAAC,CAAC,EAACJ,gBAAgB,CAAC,CAACK,GAAG,CAAC,EAAE,EAACJ,gBAAgB,CAAC,CAACK,QAAQ,CAACP,eAAe,CAAC;EACzFU,QAAQ,EAACd,MAAM,CAAC,CAAC,CAACS,GAAG,CAAC,CAAC,EAACJ,gBAAgB,CAAC,CAACK,GAAG,CAAC,EAAE,EAACJ,gBAAgB,CAAC,CAACK,QAAQ,CAACP,eAAe,CAAC;EAC5FW,QAAQ,EAACf,MAAM,CAAC,CAAC,CAACS,GAAG,CAAC,CAAC,EAACJ,gBAAgB,CAAC,CAACK,GAAG,CAAC,EAAE,EAACJ,gBAAgB,CAAC,CAACK,QAAQ,CAACP,eAAe,CAAC;EAC5FY,eAAe,EAAChB,MAAM,CAAC,CAAC,CAACS,GAAG,CAAC,CAAC,EAACJ,gBAAgB,CAAC,CAACK,GAAG,CAAC,EAAE,EAACJ,gBAAgB,CAAC,CAACW,KAAK,CAACC,GAAG,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAER,QAAQ,CAACP,eAAe;AAC9H,CAAC,CAAC;AACJ,eAAeG,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}