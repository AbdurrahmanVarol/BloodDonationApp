@using System.Text.Json;
@model EmployeeManagementViewModel
@{
    ViewData["Title"] = "EmployeeManagement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Personel Ekle</h3>
<div class="input-group input-group-lg mb-3">
    <select class="form-select" id="users">
        <option value="0" selected hidden>Seçiniz</option>
    </select>
    <div class="btn-group">
        <button type="button" class="btn btn-outline-success" onclick="addEmployee()">Personel Ekle</button>       
    </div>
</div>

<h3>Personeller</h3>
<ul id="employeeList">
</ul>

@section Scripts{
    <script>
        const model = JSON.parse('@Json.Serialize(Model)')
        console.log(model)
        const getListItemAsString = (employee) => {
            console.log(employee)
            return `
                    <li class="list-group-item fs-5 d-flex justify-content-between align-items-center">
                        <div class="me-auto">
                                    ${employee.fullName}
                        </div>
                        <button class="close btn badge text-danger float-end" onclick="removeEmployee('${employee.id}')">&#x2715</button>
                    </li>
            `
        }

        const addOption = (select,value,text,isHidden = false) => {
            let option = document.createElement("option");
            option.value =value;
            option.innerHTML =text;
            option.hidden = isHidden
            select.append(option);
        }

        const loadUnemployees = unemployees =>{

            document.querySelectorAll('#users option').forEach(option => option.remove())

            let element = document.getElementById("users")

            addOption(element,0,"Seçiniz",true)

            for (let unemployee of unemployees) {
                addOption(element, unemployee.id, unemployee.fullName)
            
            }
        }

        const loadEmployees = employees =>{
            let employeeList = document.getElementById("employeeList")

            let html = ``

            for (let employee of employees) {
                html += getListItemAsString(employee)
            }
            employeeList.innerHTML = html
        }

        const loadData = async () =>{
            let response = await fetch(`/user/GetUsersForEmployeeManagement?hospitalId=${model.hospitalId}`)
            let data = await response.json()

            loadEmployees(data.employees)
            loadUnemployees(data.unEmployedUsers)
        }

        const addEmployee = () =>{
            var select = document.getElementById('users')
            var selectedId = select.value

            let bodyData = {
                HospitalId: model.hospitalId,
                EmployeeId: selectedId
            }

            console.log(JSON.stringify(bodyData))

            fetch('/hospital/addEmployee',{
                method:'POST',
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(bodyData)
            }).then(response => response.json())
            .then(data=>{
                    if (data.isSuccess) {
                        alertify.success('Personel eklendi')
                    }
                    else {
                        alertify.error('Personel eklenemedi.\nLütfen daha sonra tekrar deneyiniz')
                    }
                    select.value = 0
                    loadData()
            })
        }

        const removeEmployee = employeeId => {            

            let bodyData = {
                hospitalId : model.hospitalId,
                employeeId
            }

            fetch('/hospital/removeEmployee', {
                method: 'POST',
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(bodyData)
            }).then(response => response.json())
                .then(data => {
                    if (data.isSuccess) {
                        alertify.success('Personel silindi')
                    }
                    else {
                        alertify.error('Personel silinemedi.\nLütfen daha sonra tekrar deneyiniz')
                    }
                    loadData()
                })          
        }
            loadData()
        

    </script>
}